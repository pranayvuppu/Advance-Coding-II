#include <stdio.h>
#include <string.h>

void findOnesComplement(char binary[], char onesComplement[]) {
    int i;
    for (i = 0; binary[i] != '\0'; i++) {
        if (binary[i] == '0') {
            onesComplement[i] = '1';
        } else if (binary[i] == '1') {
            onesComplement[i] = '0';
        } else {
            printf("\nInvalid binary number.\n");
            onesComplement[0] = '\0'; 
            return;
        }
    }
    onesComplement[i] = '\0';
}

void findTwosComplement(char binary[]) {
    char onesComplement[100];
    findOnesComplement(binary, onesComplement);

    if (onesComplement[0] == '\0') {
        return; 
    }

    int length = strlen(onesComplement);
    char twosComplement[100];
    int carry = 1; 

    for (int i = length - 1; i >= 0; i--) {
        if (onesComplement[i] == '1' && carry == 1) {
            twosComplement[i] = '0';
        } else if (onesComplement[i] == '0' && carry == 1) {
            twosComplement[i] = '1';
            carry = 0;
        } else {
            twosComplement[i] = onesComplement[i];
        }
    }

    twosComplement[length] = '\0';

    printf("Two's complement: %s\n", twosComplement);
}

void decimalToHexadecimal(int decimal) {
    char hexadecimal[100];
    int index = 0;

    if (decimal == 0) {
        printf("Hexadecimal: 0\n");
        return;
    }

    while (decimal > 0) {
        int remainder = decimal % 16;
        if (remainder < 10) {
            hexadecimal[index] = 48 + remainder; 
        } else {
            hexadecimal[index] = 55 + remainder; 
        }
        index++;
        decimal /= 16;
    }

    hexadecimal[index] = '\0';

    for (int i = index - 1; i >= 0; i--) {
        printf("%c", hexadecimal[i]);
    }
    printf("\n");
}

int main() {
    char binary[100];
    int decimal;

    printf("Enter a binary number: ");
    scanf("%s", binary);

    findTwosComplement(binary);

    printf("Enter a decimal number: ");
    scanf("%d", &decimal);

    printf("Hexadecimal: ");
    decimalToHexadecimal(decimal);

    return 0;
}
